// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     MantenimientoDeArticuloSolicitado.avsc
 */
package ArticuloEvent

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type MantenimientoDeArticuloSolicitado struct {
	Contrato string `json:"Contrato"`

	Almacen string `json:"Almacen"`

	AlmacenSAP *UnionNullString `json:"AlmacenSAP"`

	Planta string `json:"Planta"`

	DetalleDeArticulo DetalleDeArticulo `json:"DetalleDeArticulo"`
}

const MantenimientoDeArticuloSolicitadoAvroCRC64Fingerprint = "\x82A,\xf6\x1f9\xab\xac"

func NewMantenimientoDeArticuloSolicitado() MantenimientoDeArticuloSolicitado {
	r := MantenimientoDeArticuloSolicitado{}
	r.AlmacenSAP = nil
	r.DetalleDeArticulo = NewDetalleDeArticulo()

	return r
}

func DeserializeMantenimientoDeArticuloSolicitado(r io.Reader) (MantenimientoDeArticuloSolicitado, error) {
	t := NewMantenimientoDeArticuloSolicitado()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeMantenimientoDeArticuloSolicitadoFromSchema(r io.Reader, schema string) (MantenimientoDeArticuloSolicitado, error) {
	t := NewMantenimientoDeArticuloSolicitado()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeMantenimientoDeArticuloSolicitado(r MantenimientoDeArticuloSolicitado, w io.Writer) error {
	var err error
	err = vm.WriteString(r.Contrato, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.Almacen, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.AlmacenSAP, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.Planta, w)
	if err != nil {
		return err
	}
	err = writeDetalleDeArticulo(r.DetalleDeArticulo, w)
	if err != nil {
		return err
	}
	return err
}

func (r MantenimientoDeArticuloSolicitado) Serialize(w io.Writer) error {
	return writeMantenimientoDeArticuloSolicitado(r, w)
}

func (r MantenimientoDeArticuloSolicitado) Schema() string {
	return "{\"fields\":[{\"name\":\"Contrato\",\"type\":\"string\"},{\"name\":\"Almacen\",\"type\":\"string\"},{\"default\":null,\"name\":\"AlmacenSAP\",\"type\":[\"null\",\"string\"]},{\"name\":\"Planta\",\"type\":\"string\"},{\"name\":\"DetalleDeArticulo\",\"type\":{\"fields\":[{\"name\":\"Codigo\",\"type\":\"string\"},{\"default\":null,\"name\":\"EAN13\",\"type\":[\"null\",\"string\"]},{\"name\":\"Propietario\",\"type\":\"string\"},{\"default\":null,\"name\":\"Lote\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"Codigo\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"LoteDeFabricante\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"LoteSecundario\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"FechaDeVencimiento\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"OtrosDatos\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"Meta\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Contenido\",\"type\":[\"null\",\"string\"]}],\"name\":\"Metadato\",\"type\":\"record\"}]}],\"name\":\"Lote\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"OtrosDatos\",\"type\":[\"null\",{\"items\":\"Andreani.EventoWhArticulos.Events.Record.Metadato\",\"type\":\"array\"}]},{\"name\":\"Descripcion\",\"type\":\"string\"},{\"default\":null,\"name\":\"ClaseDeExpedicion\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ClaseDeArticulo\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"PaisDeOrigen\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"EsNumeroDeSerieDeEntradaUnico\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"RequiereCapturaDatosEntrada\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"EsNumeroDeSerieSalidaUnico\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"RequiereCapturaDatosSalida\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"RequierecapturaTotalNumSeries\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"Caracteristicas\",\"type\":[\"null\",{\"items\":\"Andreani.EventoWhArticulos.Events.Record.Metadato\",\"type\":\"array\"}]},{\"default\":null,\"name\":\"Notas\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"InstruccionesDePreparacion\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"VidaUtilEnDias\",\"type\":[\"null\",\"long\"]},{\"default\":null,\"name\":\"CodigoDeVidaUtil\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"IndicadorDeVidaUtil\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ConsumoEnDias\",\"type\":[\"null\",\"long\"]},{\"default\":null,\"name\":\"VencimientoEnDias\",\"type\":[\"null\",\"long\"]},{\"default\":null,\"name\":\"VidaUtilEntradaEnDias\",\"type\":[\"null\",\"long\"]},{\"default\":null,\"name\":\"AcondicionamientoSecundario\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ZonaRepo\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Grupos\",\"type\":[\"null\",{\"items\":\"Andreani.EventoWhArticulos.Events.Record.Metadato\",\"type\":\"array\"}]},{\"default\":null,\"name\":\"Volumen\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"PesoBruto\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"PesoTara\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"PesoNeto\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"CamposLibres\",\"type\":[\"null\",{\"items\":\"Andreani.EventoWhArticulos.Events.Record.Metadato\",\"type\":\"array\"}]}],\"name\":\"DetalleDeArticulo\",\"type\":\"record\"}}],\"name\":\"Andreani.EventoWhArticulos.Events.Record.MantenimientoDeArticuloSolicitado\",\"type\":\"record\"}"
}

func (r MantenimientoDeArticuloSolicitado) SchemaName() string {
	return "Andreani.EventoWhArticulos.Events.Record.MantenimientoDeArticuloSolicitado"
}

func (_ MantenimientoDeArticuloSolicitado) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ MantenimientoDeArticuloSolicitado) SetInt(v int32)       { panic("Unsupported operation") }
func (_ MantenimientoDeArticuloSolicitado) SetLong(v int64)      { panic("Unsupported operation") }
func (_ MantenimientoDeArticuloSolicitado) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ MantenimientoDeArticuloSolicitado) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ MantenimientoDeArticuloSolicitado) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ MantenimientoDeArticuloSolicitado) SetString(v string)   { panic("Unsupported operation") }
func (_ MantenimientoDeArticuloSolicitado) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *MantenimientoDeArticuloSolicitado) Get(i int) types.Field {
	switch i {
	case 0:
		w := types.String{Target: &r.Contrato}

		return w

	case 1:
		w := types.String{Target: &r.Almacen}

		return w

	case 2:
		r.AlmacenSAP = NewUnionNullString()

		return r.AlmacenSAP
	case 3:
		w := types.String{Target: &r.Planta}

		return w

	case 4:
		r.DetalleDeArticulo = NewDetalleDeArticulo()

		w := types.Record{Target: &r.DetalleDeArticulo}

		return w

	}
	panic("Unknown field index")
}

func (r *MantenimientoDeArticuloSolicitado) SetDefault(i int) {
	switch i {
	case 2:
		r.AlmacenSAP = nil
		return
	}
	panic("Unknown field index")
}

func (r *MantenimientoDeArticuloSolicitado) NullField(i int) {
	switch i {
	case 2:
		r.AlmacenSAP = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ MantenimientoDeArticuloSolicitado) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ MantenimientoDeArticuloSolicitado) AppendArray() types.Field { panic("Unsupported operation") }
func (_ MantenimientoDeArticuloSolicitado) HintSize(int)             { panic("Unsupported operation") }
func (_ MantenimientoDeArticuloSolicitado) Finalize()                {}

func (_ MantenimientoDeArticuloSolicitado) AvroCRC64Fingerprint() []byte {
	return []byte(MantenimientoDeArticuloSolicitadoAvroCRC64Fingerprint)
}

func (r MantenimientoDeArticuloSolicitado) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["Contrato"], err = json.Marshal(r.Contrato)
	if err != nil {
		return nil, err
	}
	output["Almacen"], err = json.Marshal(r.Almacen)
	if err != nil {
		return nil, err
	}
	output["AlmacenSAP"], err = json.Marshal(r.AlmacenSAP)
	if err != nil {
		return nil, err
	}
	output["Planta"], err = json.Marshal(r.Planta)
	if err != nil {
		return nil, err
	}
	output["DetalleDeArticulo"], err = json.Marshal(r.DetalleDeArticulo)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *MantenimientoDeArticuloSolicitado) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["Contrato"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Contrato); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Contrato")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Almacen"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Almacen); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Almacen")
	}
	val = func() json.RawMessage {
		if v, ok := fields["AlmacenSAP"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.AlmacenSAP); err != nil {
			return err
		}
	} else {
		r.AlmacenSAP = NewUnionNullString()

		r.AlmacenSAP = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Planta"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Planta); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Planta")
	}
	val = func() json.RawMessage {
		if v, ok := fields["DetalleDeArticulo"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DetalleDeArticulo); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for DetalleDeArticulo")
	}
	return nil
}
